<?xml version="1.0" encoding="UTF-8" ?>
<Document Version="2">
    <Protection InputFileName="Zynx.exe" Options="857032">
        <Messages />
        <Folders />
        <Procedures>
            <Procedure MapAddress="unsigned char const _guard_dispatch_icall_nop" Options="0" CompilationType="2" />
            <Procedure MapAddress="unsigned char const _guard_xfg_dispatch_icall_nop" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parse_error::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::start_array(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_System_error::_System_error(class std::error_code,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_easy_strerror" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,310&gt;::c_str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__C_specific_handler" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_throw_std_bad_array_new_length(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::sync(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlStringMgr::Free(struct ATL::CStringData *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::exception_message(enum nlohmann::json_abi_v3_11_2::detail::lexer_base&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::token_type,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="realloc" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cert_hostcheck" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_backend" Options="0" CompilationType="2" />
            <Procedure MapAddress="__local_stdio_printf_options" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$handle_value@$$T@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@nlohmann@@@detail@nlohmann@@AEAA?AU?$pair@_NPEAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@nlohmann@@@std@@$$QEA$$T_N@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class nlohmann::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class `class &lt;lambda_1&gt;::nlohmann * nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;class nlohmann::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::nlohmann const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;::~unique_ptr&lt;class nlohmann::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class `class &lt;lambda_1&gt;::nlohmann * nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;class nlohmann::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::nlohmann const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_exe_initialize_mta" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsSetUploadSize" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_set_subparts" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_array_new_length::~bad_array_new_length(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_fileinfo_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isprint" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlStringMgr::GetNilString(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::key(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_set_engine" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_timediff" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(struct std::_String_constructor_concat_tag,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,char const * const,unsigned __int64,char const * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_update_timer" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_write" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::next_byte_in_range(class std::initializer_list&lt;int&gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_acquire_startup_lock" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Thrd_sleep_for" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_easy_getinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::get(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::invalid_iterator::create&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *,0&gt;(int,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_GetFTPResponse" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::~vector&lt;bool,class std::allocator&lt;bool&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_initinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_speedcheck" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_System_error::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_readrewind" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_input_ntlm" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$_Reallocate_grow_by@V&lt;lambda_1&gt;@?L@??reserve@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAX_K@Z@$$V@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV&lt;lambda_1&gt;@?L@??reserve@01@QEAAX0@Z@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_multi_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_read16_be" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_build_spn" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::reset(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_none_engines_list" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_httpchunk_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_integer&lt;__int64,0&gt;(__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_rewind" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;,class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;::~unique_ptr&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;,class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_strnequal" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::~lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_MD5_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_cleanup_ntlm" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *&gt;::deallocate(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_gmtime" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tidy_guard&lt;class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::~_Tidy_guard&lt;class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::_Tidy_deallocate(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pretransfer" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_auth_cleanup_digest" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_chunked_strerror" Options="0" CompilationType="2" />
            <Procedure MapAddress="_register_thread_local_exe_atexit_callback" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_set_engine_default" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Throw_system_error(enum std::errc)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_cancel" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_url" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_builtin_scheme" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_fnmatch" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_head_scoped_ptr&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt;,class std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt; &gt;::~_Tree_head_scoped_ptr&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt;,class std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::type_name(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSimpleStringT&lt;char,0&gt;::Empty(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_is_ntlm_supported" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::deallocate(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;::deallocate(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sasl_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;__int64 &amp;&gt;(__int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::skip_whitespace(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::output_stream_adapter&lt;char&gt;::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::serializer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::dump_integer&lt;__int64,0&gt;(__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree&lt;class std::_Tmap_traits&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,0&gt; &gt;::_Getal(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;unsigned __int64 &amp;&gt;(unsigned __int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_initsessions" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CWin32Heap::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::json_value(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;::_Xlength(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::filesystem_error::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::back(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_socketpair" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$07@@YA?A_PAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$07@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="`struct CAtlStringMgr::IAtlStringMgr * ATL::CAtlStringMgr::GetInstance(void)&apos;::`2&apos;::`dynamic atexit destructor for &apos;strHeap&apos;&apos;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::output_string_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="strrchr" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::chrono::steady_clock::now(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ostream&lt;char,struct std::char_traits&lt;char&gt; &gt;::_Sentry_base::~_Sentry_base(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_expire_done" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mfprintf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mk_dnscache" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::input_stream_adapter::~input_stream_adapter(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *&gt; &gt;::_Change_array(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * * const,unsigned __int64,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::insert(unsigned __int64,char const * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_ntlm_type3_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_multi_info_read" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_array_new_length::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::use_facet&lt;class std::ctype&lt;char&gt; &gt;(class std::locale const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="checksum(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::operator&gt;&gt;&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_istream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="atexit" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::serializer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::dump(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;,bool,bool,unsigned int,unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlStringMgr::GetInstance(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_num_addresses" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_build_unencoding_stack" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::out_of_range::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_alloc::bad_alloc(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_none_session_free" Options="0" CompilationType="2" />
            <Procedure MapAddress="__vcrt_uninitialize" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::invalid_iterator::~invalid_iterator(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parse_error::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_sltous" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_connect_nonblocking" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(struct std::_String_constructor_concat_tag,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,16&gt;::operator class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_set_unhandled_exception_filter" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_splayremovebyaddr" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_push_certinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_auth_cleanup_negotiate" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::number_integer(__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_close" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_SOCKS_getsock" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;__int64 &amp;&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,__int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_CxxThrowException" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$create@$$T$0A@@type_error@detail@json_abi_v3_11_2@nlohmann@@SA?AV0123@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$T@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="memmove" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_easy_perform" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_printable_address" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_thread_destroy" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_read" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;&gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; * const,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Ref_count_obj2&lt;class nlohmann::json_abi_v3_11_2::detail::output_stream_adapter&lt;char&gt; &gt;::_Destroy(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::operator+&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(char const * const,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_strntoupper" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_temp_node_alloc&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt; &gt;::~_Tree_temp_node_alloc&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_meets_timecondition" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_initialize_type_info(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_parsenetrc" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_strtoofft" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Uninitialized_backout_al&lt;class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::~_Uninitialized_backout_al&lt;class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Throw_bad_cast(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Erase_tree_and_orphan&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt; &gt;(class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt; &amp;,struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_multi_max_host_connections" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *&gt; &gt;::_Emplace_reallocate&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * * const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;class nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;(class nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_memdup" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_get_dyn_tls_dtor_callback" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_once_resolved" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_SOCKS5_gssapi_negotiate" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_safe_strcasecompare" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isunreserved" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::erase(class std::_Vb_const_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="mainCRTStartup" Options="0" CompilationType="2" />
            <Procedure MapAddress="_configure_narrow_argv" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_connect" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;wchar_t,struct std::char_traits&lt;wchar_t&gt;,class std::allocator&lt;wchar_t&gt; &gt;::resize(unsigned __int64,wchar_t)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::_Convert_wide_to_narrow_replace_chars&lt;struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(enum __std_code_page,class std::basic_string_view&lt;wchar_t,struct std::char_traits&lt;wchar_t&gt; &gt;,class std::allocator&lt;char&gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_initialize_onexit_table" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::operator+&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,char const * const)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::api(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_easy_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="terminate" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_cleanup_gssapi" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_throw_std_bad_alloc(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_guard_check_icall_nop" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_sessionid_lock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_add_custom_headers" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_setup_conn" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;::_Tidy(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_fastfail" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_none_check_cxn" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;::~vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSid::operator=(struct _SID const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::scan_comment(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_digest_get_pair" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_get_stats" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::operator+&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::regstr(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_get_current_path" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_multi_remove_handle" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,8&gt;::c_str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_connect_free" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_spnego_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_base64_decode" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_base64_encode" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::_Unlock(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_memrchr" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::operator[](class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_SOCKS4" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sasl_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlStringMgr::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_exception_copy" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_extract_oldest" Options="0" CompilationType="2" />
            <Procedure MapAddress="_exit" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_single_getsock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_none_set_engine_default" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::~parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,8&gt;::operator class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_set_app_type" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::seekoff(__int64,int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_kill" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;,class nlohmann::detail::A6A_NHW4parse_event_t::function,class basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_output_negotiate" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::_ATL_SAFE_ALLOCA_IMPL::CAtlSafeAllocBufferManager&lt;class ATL::CCRTAllocator&gt;::~CAtlSafeAllocBufferManager&lt;class ATL::CCRTAllocator&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_splay" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[26],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char&gt;(char const (&amp;)[26],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,char &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolv_timeout" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::_Reallocate_for&lt;class `class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp; std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::assign(char const * const,unsigned __int64)&apos;::`2&apos;::&lt;lambda_1&gt;,char const *&gt;(unsigned __int64,class `class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp; std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::assign(char const * const,char const * const)&apos;::`2&apos;::&lt;lambda_1&gt;,char const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_slist_append" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[12],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[3],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;&gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,char const (&amp;)[12],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,char const (&amp;)[3],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Init_thread_header" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::parser&lt;class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;(class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt;,class nlohmann::detail::A6A_NHW4parse_event_t::function,class detail::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::_Endwrite(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_shutdown" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_splayinsert" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::dtoa_impl::grisu2(char *,int &amp;,int &amp;,struct nlohmann::json_abi_v3_11_2::detail::dtoa_impl::diyfp,struct nlohmann::json_abi_v3_11_2::detail::dtoa_impl::diyfp,struct nlohmann::json_abi_v3_11_2::detail::dtoa_impl::diyfp)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_maprintf" Options="0" CompilationType="2" />
            <Procedure MapAddress="__report_rangecheckfailure" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[1]&gt;(char const (&amp;)[1])&apos;::`2&apos;::&lt;lambda_1&gt; &gt;::~unique_ptr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[1]&gt;(char const (&amp;)[1])&apos;::`2&apos;::&lt;lambda_1&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_istringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;unsigned __int64 &amp;&gt;(unsigned __int64 &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree&lt;class std::_Tmap_traits&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,0&gt; &gt;::_Find_lower_bound&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::license(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sndbufset" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::output_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;::~output_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_add_bufferf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isalnum" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::shared_ptr&lt;struct nlohmann::json_abi_v3_11_2::detail::output_adapter_protocol&lt;char&gt; &gt;::~shared_ptr&lt;struct nlohmann::json_abi_v3_11_2::detail::output_adapter_protocol&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="memchr" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::get(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Ref_count_obj2&lt;class nlohmann::json_abi_v3_11_2::detail::output_stream_adapter&lt;char&gt; &gt;::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_prepare_headers" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_getconnectinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSid::Sid(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ratelimit" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_System_error_category::message(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_url_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="_seh_filter_exe" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isgraph" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;class nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;(class nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_decode_spnego_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="_register_onexit_function" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree&lt;class std::_Tmap_traits&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,0&gt; &gt;::_Getal(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::dtoa_impl::format_buffer(char *,int,int,int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_convert_wchar_to_UTF8" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_read_plain" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::serializer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~serializer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::operator&lt;&lt;&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_ostream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mvsnprintf" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::~vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::AtlHresultFromLastError(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;enum nlohmann::json_abi_v3_11_2::detail::value_t&gt;(enum nlohmann::json_abi_v3_11_2::detail::value_t &amp;&amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::hex_bytes(unsigned char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSid::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::open(char const *,int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__isa_available_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Extract(class std::_Tree_unchecked_const_iterator&lt;class std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;,struct std::_Iterator_base0&gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::_Get_any_status(class std::filesystem::path const &amp;,enum __std_fs_stats_flags)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::setbuf(char *,__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_add_conn" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::~basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_output_ntlm" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::output_string_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;::write_character(char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::to_string(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::imbue(class std::locale const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_easy_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sasl_start" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Winerror_map(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::setw(__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_random" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::sax_parse_internal&lt;class nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(class nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::runtime_error::runtime_error(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::exception::what(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_output_digest" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::exists(class std::filesystem::path const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::number_unsigned(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_add" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_getformdata" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_filename" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::_Insert_x(class std::_Vb_const_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt;,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0L@$0L@@@YA?A_PAEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0L@@@0@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;bool &amp;&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,bool &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_poll" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::less&lt;void&gt;::operator()&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;&gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Alloc_temporary2&lt;class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::~_Alloc_temporary2&lt;class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??0?$function@$$A6A_NHW4parse_event_t@detail@nlohmann@@AEAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@3@@Z@std@@QEAA@$$QEAV01@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_fillreadbuffer" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_initialize_onexit_tables" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_des_set_odd_parity" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_parseX509" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_digest_http_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *&gt; &gt;::~vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_expire_clear" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_persistconninfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_next_element" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsSetDownloadCounter" Options="0" CompilationType="2" />
            <Procedure MapAddress="__WSAFDIsSet" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;double &amp;&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,double &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_extract_certinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;wchar_t,struct std::char_traits&lt;wchar_t&gt;,class std::allocator&lt;wchar_t&gt; &gt;::_Construct&lt;1,wchar_t const *&gt;(wchar_t const * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Throw_tree_length_error(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Tidy(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::exception::name(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::next_byte_in_range(class std::initializer_list&lt;int&gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::end_array(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_connect_complete" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_vsendf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_output_auth" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pin_peer_pubkey" Options="0" CompilationType="2" />
            <Procedure MapAddress="free" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_set_in_callback" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Xlength(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_connalive" Options="0" CompilationType="2" />
            <Procedure MapAddress="operator delete(void *,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::exception::what(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;&gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSid::~CSid(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_copy_header_value" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::insert(class std::_Vector_const_iterator&lt;class std::_Vector_val&lt;struct std::_Simple_types&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;,unsigned __int64,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_doh_is_resolved" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ostream&lt;char,struct std::char_traits&lt;char&gt; &gt;::sentry::~sentry(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::assign(char const * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::thread::_Invoke&lt;class std::tuple&lt;void (*)(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,struct std::atomic&lt;bool&gt; &amp;),char const *,class std::reference_wrapper&lt;struct std::atomic&lt;bool&gt; &gt; &gt;,0,1,2&gt;(void *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_unencode_write" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_cert_status_request" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_get_upload_buffer" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::handle_value&lt;unsigned __int64 &amp;&gt;(unsigned __int64 &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::_Insert_n(class std::_Vb_const_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt;,unsigned __int64,bool const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="strdup" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::scan_string(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="malloc" Options="0" CompilationType="2" />
            <Procedure MapAddress="_crt_atexit" Options="0" CompilationType="2" />
            <Procedure MapAddress="memcmp" Options="0" CompilationType="2" />
            <Procedure MapAddress="__chkstk" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_MD5_update" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[51],char const *&gt;(char const (&amp;)[51],char const * &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Uninitialized_move&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; *,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; * const,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; * const,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; *,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[29],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[5],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;(char const (&amp;)[29],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;,char const (&amp;)[5],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::end_object(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_HMAC_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_wildcard_dtor" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_unix2addr" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$_Reallocate_grow_by@V&lt;lambda_1&gt;@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KQEBD0@Z@_KPEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV&lt;lambda_1&gt;@?1??insert@01@QEAAAEAV01@0QEBD0@Z@_KPEBD3@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_llist_count" Options="0" CompilationType="2" />
            <Procedure MapAddress="__security_check_cookie" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_read" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Uninitialized_move&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Insert_node(struct std::_Tree_id&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; *&gt;,struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; * const)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::~basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::operator[](class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,9&gt;::operator class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;,class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;::~unique_ptr&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;,class std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$_Reallocate_grow_by@V&lt;lambda_1&gt;@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV&lt;lambda_1&gt;@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_addrinfo_callback" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::out_of_range::out_of_range(class nlohmann::json_abi_v3_11_2::detail::out_of_range const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class KeyAuth::api::subscriptions_class,class std::allocator&lt;class KeyAuth::api::subscriptions_class&gt; &gt;::~vector&lt;class KeyAuth::api::subscriptions_class,class std::allocator&lt;class KeyAuth::api::subscriptions_class&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_auth_act" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::operator=&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,0&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_initterm_e" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::_Unlock(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::serializer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::dump_escaped(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_code_page" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_freeset" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::_AtlInitializeCriticalSectionEx(struct _RTL_CRITICAL_SECTION *,unsigned long,unsigned long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_type" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_connecthost" Options="0" CompilationType="2" />
            <Procedure MapAddress="__raise_securityfailure" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt;::_Xran(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::type_error::create&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; const *,0&gt;(int,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ofstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::`vbase destructor&apos;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_RTC_Initialize" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class std::_Facet_base,struct std::default_delete&lt;class std::_Facet_base&gt; &gt;::~unique_ptr&lt;class std::_Facet_base,struct std::default_delete&lt;class std::_Facet_base&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_str" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Uninitialized_move&lt;class KeyAuth::api::subscriptions_class *,class std::allocator&lt;class KeyAuth::api::subscriptions_class&gt; &gt;(class KeyAuth::api::subscriptions_class * const,class KeyAuth::api::subscriptions_class * const,class KeyAuth::api::subscriptions_class *,class std::allocator&lt;class KeyAuth::api::subscriptions_class&gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_fetch_addr" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Func_class&lt;bool,int,enum nlohmann::detail::parse_event_t,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;&gt;::~_Func_class&lt;bool,int,enum nlohmann::detail::parse_event_t,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_llist_destroy" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_fileinfo_alloc" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_loadfiles" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_release_startup_lock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_connect_ongoing" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::destroy(enum nlohmann::detail::value_t)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ntlm_core_mk_lm_hash" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;::_Buy_nonzero(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$create@$$T$0A@@parse_error@detail@json_abi_v3_11_2@nlohmann@@SA?AV0123@HAEBUposition_t@123@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$T@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_free_request_state" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::`vector deleting destructor&apos;`vtordisp{4294967292,0}&apos; (unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;unsigned __int64 &amp;&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,unsigned __int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_unlock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_compile_trailers" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::close(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_init_do" Options="0" CompilationType="2" />
            <Procedure MapAddress="_dclass" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_share_unlock" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Change_array(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,unsigned __int64,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_strequal" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_vsetopt" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_is_resolved" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,71&gt;::c_str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="hmac_sha256" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::~basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="strcmp" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_nonblock" Options="0" CompilationType="2" />
            <Procedure MapAddress="GetModuleInformation" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_debug" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlStringMgr::Allocate(int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_uztoui" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sasl_continue" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::get_token_string(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Init_thread_footer" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mvaprintf" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CWin32Heap::Allocate(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sspi_strerror" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ofstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::_Throw_fs_error(char const *,class std::error_code const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;enum nlohmann::detail::value_t&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,enum nlohmann::detail::value_t &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_send_plain" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_input_auth" Options="0" CompilationType="2" />
            <Procedure MapAddress="strchr" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Reallocate&lt;0&gt;(unsigned __int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_headers" Options="0" CompilationType="2" />
            <Procedure MapAddress="_initterm" Options="0" CompilationType="2" />
            <Procedure MapAddress="__GSHandlerCheck_EH4" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolv_check" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_add_header" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_free_certinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_parse_login_details" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::other_error::other_error(class nlohmann::json_abi_v3_11_2::detail::other_error const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_proxy_connect" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Make_ec(enum __std_win_error)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_convert_wide_to_narrow" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_delsessionid" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::erase&lt;class nlohmann::detail::iter_impl&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,0&gt;(class nlohmann::detail::iter_impl&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_alloc::bad_alloc(class std::bad_alloc const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__GSHandlerCheck" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_data" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::c_str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt;::_Freenode&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt; &gt;(class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt; &amp;,struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="error(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_iscntrl" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_saferealloc" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Allocate_at_least_helper&lt;class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &amp;,unsigned __int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::add(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::thread::~thread(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_istream&lt;char,struct std::char_traits&lt;char&gt; &gt;::sentry::~sentry(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_list" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_getaddrinfo_ex" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_moredata" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_str2addr" Options="0" CompilationType="2" />
            <Procedure MapAddress="__crt_debugger_hook" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_url_set" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_sessionid_unlock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_multiplex_wanted" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::~serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlBaseModule::~CAtlBaseModule(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_System_error_message::~_System_error_message(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$create@$$T$0A@@other_error@detail@json_abi_v3_11_2@nlohmann@@SA?AV0123@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$T@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_verboseconnect" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CWin32Heap::Free(void *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::invalid_iterator::invalid_iterator(class nlohmann::json_abi_v3_11_2::detail::invalid_iterator const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::_Throw_fs_error(char const *,enum __std_win_error,class std::filesystem::path const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$handle_value@$$T@?$json_sax_dom_callback_parser@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@@detail@json_abi_v3_11_2@nlohmann@@AEAA?AU?$pair@_NPEAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@@std@@$$QEA$$T_N@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_strncasecompare" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_getsock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_none_cert_status_request" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_initialize_default_local_stdio_options" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::seekpos(class std::fpos&lt;struct _Mbstatet&gt;,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;bool &amp;&gt;(bool &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_istringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::`vector deleting destructor&apos;`vtordisp{4294967292,0}&apos; (unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_slist_free_all" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_check_cxn" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_follow" Options="0" CompilationType="2" />
            <Procedure MapAddress="`struct CAtlStringMgr::IAtlStringMgr * ATL::CAtlStringMgr::GetInstance(void)&apos;::`2&apos;::`dynamic atexit destructor for &apos;strMgr&apos;&apos;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_clearsess" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?0PEAD$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@PEAD0AEBV?$allocator@D@1@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_System_error::_System_error(class std::_System_error const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::scan_number(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_flush_cookies" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_closesocket" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_is_nonwritable_in_current_image" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;bool &amp;&gt;(bool &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::~json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="operator new(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$09@@YA?A_PAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$09@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsDone" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::push_back(bool const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_smtp_escape_eob" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CA2AEX&lt;128&gt;::~CA2AEX&lt;128&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Lockit::~_Lockit(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::type_error::type_error(class nlohmann::json_abi_v3_11_2::detail::type_error const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_engines_list" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_timediff_us" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_islower" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_extract_bundle" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::filesystem_error::_Pretty_message(class std::basic_string_view&lt;char,struct std::char_traits&lt;char&gt; &gt;,class std::filesystem::path const &amp;,class std::filesystem::path const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Destroy_range&lt;class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; *,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; * const,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__p___argv" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;::~unique_ptr&lt;class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::path::~path(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::parse(bool,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="operator delete(void *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_attach_connnection" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ofstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::`vector deleting destructor&apos;`vtordisp{4294967292,0}&apos; (unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Sha256Initialise" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;wchar_t,struct std::char_traits&lt;wchar_t&gt;,class std::allocator&lt;wchar_t&gt; &gt;::basic_string&lt;wchar_t,struct std::char_traits&lt;wchar_t&gt;,class std::allocator&lt;wchar_t&gt; &gt;(class std::basic_string&lt;wchar_t,struct std::char_traits&lt;wchar_t&gt;,class std::allocator&lt;wchar_t&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_name" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_is_user_matherr_present" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Erase_head&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt; &gt;(class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_close_all_connections" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class std::tuple&lt;void (*)(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,struct std::atomic&lt;bool&gt; &amp;),char const *,class std::reference_wrapper&lt;struct std::atomic&lt;bool&gt; &gt; &gt;,struct std::default_delete&lt;class std::tuple&lt;void (*)(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,struct std::atomic&lt;bool&gt; &amp;),char const *,class std::reference_wrapper&lt;struct std::atomic&lt;bool&gt; &gt; &gt; &gt; &gt;::~unique_ptr&lt;class std::tuple&lt;void (*)(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,struct std::atomic&lt;bool&gt; &amp;),char const *,class std::reference_wrapper&lt;struct std::atomic&lt;bool&gt; &gt; &gt;,struct std::default_delete&lt;class std::tuple&lt;void (*)(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,struct std::atomic&lt;bool&gt; &amp;),char const *,class std::reference_wrapper&lt;struct std::atomic&lt;bool&gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_md4it" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_ultouc" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Xbad_function_call(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; const &amp;&gt;(class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_login_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::operator=(char const * const)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_now" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_addpart" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_multi_max_total_connections" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_close_all" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::showmanyc(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_gethostname" Options="0" CompilationType="2" />
            <Procedure MapAddress="RedactField(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_unhandled_exception_filter" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_decode_digest_http_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?BV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@nlohmann@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@XZ" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSimpleStringT&lt;char,0&gt;::SetString(char const *,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_getsock" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::xsputn(char const *,__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::_Erase_tree_and_orphan&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt; &gt;(class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt; &amp;,struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="exit" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::string(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ipv6_scope" Options="0" CompilationType="2" />
            <Procedure MapAddress="check_section_integrity(char const *,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::`vector deleting destructor&apos;`vtordisp{4294967292,0}&apos; (unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_find_bundle" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;wchar_t,struct std::char_traits&lt;wchar_t&gt;,class std::allocator&lt;wchar_t&gt; &gt;::_Tidy_deallocate(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="WriteToJson(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::filesystem_error::what(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Destroy_range&lt;class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_failf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_clone_primary_ssl_config" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_HMAC_final" Options="0" CompilationType="2" />
            <Procedure MapAddress="modify(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::exception::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::AtlThrowImpl(long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ipvalid" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::_Reallocate_grow_by&lt;class `void std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::push_back(char)&apos;::`2&apos;::&lt;lambda_1&gt;,char&gt;(unsigned __int64,class `void std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::push_back(char)&apos;::`2&apos;::&lt;lambda_1&gt;,char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_setstropt" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::overflow(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::locale::~locale(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::null(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$08@@YA?A_PAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$08@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;(enum nlohmann::json_abi_v3_11_2::detail::value_t)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_destroy" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ftp_parselist_data_free" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_recv_has_postponed_data" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::_ATL_SAFE_ALLOCA_IMPL::_AtlVerifyStackAvailable(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_wait_ms" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_SOCKS5" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sasl_decode_mech" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_foreach" Options="0" CompilationType="2" />
            <Procedure MapAddress="main" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Uninitialized_fill_n&lt;class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,unsigned __int64,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlBaseModule::CAtlBaseModule(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?0V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@std@@$0A@@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@V?$_String_iterator@V?$_String_val@U?$_Simple_types@_W@std@@@std@@@1@0AEBV?$allocator@D@1@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::istream_iterator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char,struct std::char_traits&lt;char&gt;,__int64&gt;::~istream_iterator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char,struct std::char_traits&lt;char&gt;,__int64&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_is_ucrt_dll_in_use" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sspi_global_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::underflow(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;__int64 &amp;&gt;(__int64 &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_callnewh" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_freelist" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_xoauth_bearer_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree&lt;class std::_Tmap_traits&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,0&gt; &gt;::_Copy_nodes&lt;0&gt;(struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; *,struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__p___argc" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_connect" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parser&lt;class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;(class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter,class nlohmann::json_abi_v3_11_2::detail::A6A_NHW4parse_event_t::function,class detail::parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parse_error::position_string(struct nlohmann::detail::position_t const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$_Emplace@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$T@?$_Tree@V?$_Tmap_traits@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@U?$less@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@V?$allocator@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@@std@@@2@$0A@@std@@@std@@IEAA?AU?$pair@PEAU?$_Tree_node@U?$pair@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@@std@@PEAX@std@@_N@1@$$QEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@$$QEA$$T@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_plain_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_getsessionid" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Insert_string&lt;char,struct std::char_traits&lt;char&gt;,unsigned __int64&gt;(class std::basic_ostream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;,char const * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="utils::get_hwid(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_get_startup_file_mode" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_System_error_category::name(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="memset" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_multi_handle" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Alloc_construct_ptr&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt; &gt;::~_Alloc_construct_ptr&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_init_certinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@nlohmann@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_delete" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_all_content_encodings" Options="0" CompilationType="2" />
            <Procedure MapAddress="debugInfo(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_integer&lt;unsigned __int64,0&gt;(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;__int64 &amp;&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,__int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_onexit" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::getline&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_istream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;&amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;,char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Uninitialized_backout_al&lt;class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::~_Uninitialized_backout_al&lt;class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_add_buffer_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_init_CONNECT" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[25],char const *&gt;(char const (&amp;)[25],char const * &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::underflow(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_create_directory" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_uninitialize_crt" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSimpleStringT&lt;char,0&gt;::PrepareWrite2(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::_Extract(class std::_Tree_unchecked_const_iterator&lt;class std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;,struct std::_Iterator_base0&gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;double &amp;&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,double &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::V::create(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::xsputn(char const *,__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::system_error::system_error(class std::error_code)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class nlohmann::json_abi_v3_11_2::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class `class &lt;lambda_1&gt;::nlohmann::json_abi_v3_11_2 * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class nlohmann::json_abi_v3_11_2::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::json_abi_v3_11_2::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::nlohmann::json_abi_v3_11_2 const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;::~unique_ptr&lt;class nlohmann::json_abi_v3_11_2::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class `class &lt;lambda_1&gt;::nlohmann::json_abi_v3_11_2 * nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class nlohmann::json_abi_v3_11_2::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::json_abi_v3_11_2::byte_container_with_subtype&lt;class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::nlohmann::json_abi_v3_11_2 const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_clean_with_criterium" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse(bool,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__GSHandlerCheckCommon" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CWin32Heap::GetSize(void *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::allocator&lt;char&gt;::deallocate(char * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_array_new_length::bad_array_new_length(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::exception::name(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??1?$function@$$A6A_NHW4parse_event_t@detail@json_abi_v3_11_2@nlohmann@@AEAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@34@@Z@std@@QEAA@XZ" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_share_lock" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::`vbase destructor&apos;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Generic_error_category::name(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::_Deallocate_for_capacity(class std::allocator&lt;char&gt; &amp;,char * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Facet_Register(class std::_Facet_base *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::json_value::destroy(enum nlohmann::json_abi_v3_11_2::detail::value_t)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_input_digest" Options="0" CompilationType="2" />
            <Procedure MapAddress="_get_initial_narrow_environment" Options="0" CompilationType="2" />
            <Procedure MapAddress="snprintf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_winapi_strerror" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isalpha" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::exception::what(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_is_ASCII_name" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::_Reallocate_grow_by&lt;class `class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp; std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::append(char const * const,unsigned __int64)&apos;::`2&apos;::&lt;lambda_1&gt;,char const *,unsigned __int64&gt;(unsigned __int64,class `class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp; std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::append(char const * const,char const * const)&apos;::`2&apos;::&lt;lambda_1&gt;,char const *,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::V::create(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::serializer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::dump_integer&lt;unsigned char,0&gt;(unsigned char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_convert_UTF8_to_wchar" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_strerror" Options="0" CompilationType="2" />
            <Procedure MapAddress="memcpy" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_oauth_bearer_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="_cexit" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree&lt;class std::_Tmap_traits&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,struct std::less&lt;void&gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,0&gt; &gt;::_Copy_nodes&lt;0&gt;(struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; *,struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_destroy" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_is_connected" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_blockread_all" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_open_handle" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_expire" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Ref_count_obj2&lt;class nlohmann::detail::output_string_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;::`vector deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; const &amp;&gt;(class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_configthreadlocale" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_splaygetbest" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::handle_value&lt;double &amp;&gt;(double &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="GetProcessID(wchar_t const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::~api(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::runtime_error::runtime_error(char const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[39],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;(char const (&amp;)[39],class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_readwrite" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_rand_hex" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::init(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="GenerateRandomString(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(char const * const)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_pick" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_add" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_decode_ntlm_type2_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_addr2string" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_close" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;enum nlohmann::json_abi_v3_11_2::detail::value_t&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,enum nlohmann::json_abi_v3_11_2::detail::value_t &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::appdata::~appdata(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_System_error_category::default_error_condition(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAccessToken::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$create@$$T$0A@@out_of_range@detail@json_abi_v3_11_2@nlohmann@@SA?AV0123@HAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$$T@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_disconnect" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_sltosi" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_add_timecondition" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$_Reallocate_grow_by@V&lt;lambda_1&gt;@?1??append@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QEAAAEAV34@_K_W@Z@_K_W@?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@AEAAAEAV01@_KV&lt;lambda_1&gt;@?1??append@01@QEAAAEAV01@0_W@Z@_K_W@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;char,class std::allocator&lt;char&gt; &gt;::_Emplace_reallocate&lt;char&gt;(char * const,char &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_urldecode" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_rand" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::parse&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;,class nlohmann::detail::A6A_NHW4parse_event_t::function,class std::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::output_stream_adapter&lt;char&gt;::write_characters(char const *,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Destroy_range&lt;class std::allocator&lt;class KeyAuth::api::subscriptions_class&gt; &gt;(class KeyAuth::api::subscriptions_class *,class KeyAuth::api::subscriptions_class * const,class std::allocator&lt;class KeyAuth::api::subscriptions_class&gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::V::_Try_emplace(class map&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,struct std::less&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;,class std::allocator&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::dump(int,char,bool,enum nlohmann::detail::error_handler_t)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::~json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::_Throw_fs_error(char const *,class std::error_code const &amp;,class std::filesystem::path const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_multi_perform" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_speedinit" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_msnprintf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_user_contains_domain" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isxdigit" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSid::CSid(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_easy_setopt" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_disconnect" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::concat&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char const (&amp;)[29],char const *&gt;(char const (&amp;)[29],char const * &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_multi_poll" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::_Construct&lt;1,char const *&gt;(char const * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CWin32Heap::Reallocate(void *,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_return_conn" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::userdata::~userdata(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::upgrade(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_base64url_encode" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::filesystem_error::filesystem_error(class std::filesystem::filesystem_error const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::dtoa_impl::grisu2_digit_gen(char *,int &amp;,int &amp;,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::imbue(class std::locale const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSimpleStringT&lt;char,0&gt;::ThrowMemoryException(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_retry_request" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_inet_pton" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::operator&lt;&lt;&lt;struct std::char_traits&lt;char&gt; &gt;(class std::basic_ostream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;,char const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::filesystem_error::filesystem_error(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class std::error_code)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsSetDownloadSize" Options="0" CompilationType="2" />
            <Procedure MapAddress="__current_exception_context" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;::~unique_ptr&lt;class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,class `class &lt;lambda_1&gt;::std * nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::create&lt;class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;,class std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; const &amp;&gt;(class &lt;lambda_1&gt;::std const &amp;)&apos;::`2&apos;::&lt;lambda_1&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_head_scoped_ptr&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt;,class std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt; &gt;::~_Tree_head_scoped_ptr&lt;class std::allocator&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; &gt;,class std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::json_value::json_value(enum nlohmann::detail::value_t)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,68&gt;::c_str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::scan(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_wait_resolv" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_win32_idn_to_ascii" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::get_codepoint(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::system_error::system_error(class std::system_error const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_checkProxyheaders" Options="0" CompilationType="2" />
            <Procedure MapAddress="__p__commode" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_data_cb" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_setup_transfer" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sasl_parse_url_auth_option" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_statemach" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_multiuse_state" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_system_error_allocate_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="UpdateTitle(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,struct std::atomic&lt;bool&gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::`vbase destructor&apos;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_strcasecompare" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_convert_narrow_to_wide" Options="0" CompilationType="2" />
            <Procedure MapAddress="__report_securityfailure" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_loadhostpairs" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::scan_string(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_getdate_capped" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::type_error::create&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *,0&gt;(int,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::_Xlen(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="_set_new_mode" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_llist_insert_next" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_free_idnconverted_hostname" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsLimitWaitTime" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_url_get" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_is_absolute_url" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parse_error::position_string(struct nlohmann::json_abi_v3_11_2::detail::position_t const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::~basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_decode_cram_md5_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlException::CAtlException(long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &amp;,class nlohmann::json_abi_v3_11_2::detail::A6A_NHW4parse_event_t::function,class basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::exception::exception(class nlohmann::json_abi_v3_11_2::detail::exception const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@@YA?A_PAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$06@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_size" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::get_codepoint(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::unique_ptr&lt;struct _iobuf,int (*)(struct _iobuf *)&gt;::~unique_ptr&lt;struct _iobuf,int (*)(struct _iobuf *)&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::login(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parse&lt;class std::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;&gt;(class std::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;,class nlohmann::json_abi_v3_11_2::detail::A6A_NHW4parse_event_t::function,class std::basic_ifstream&lt;char,struct std::char_traits&lt;char&gt; &gt;::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncache_remove_conn" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_compareheader" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,50&gt;::c_str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::exception_message(enum nlohmann::detail::lexer_base&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::token_type,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;double &amp;&gt;(double &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_multi_closed" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::get_token_string(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSid::Copy(struct _SID const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_read" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_digest_md5_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Throw_system_error_from_std_win_error(enum __std_win_error)" Options="0" CompilationType="2" />
            <Procedure MapAddress="strstr" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAccessToken::Clear(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::operator==&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,char const * const)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolv_getsock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_strtok_r" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::load_app_data(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::to_string(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__setusermatherr" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sspi_free_identity" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_input_negotiate" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isspace" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_proxyCONNECT" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::dtoa_impl::grisu2(char *,int &amp;,int &amp;,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp,struct nlohmann::detail::dtoa_impl::diyfp)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsUpdate" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;::operator[]&lt;char const&gt;(char const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_read16_le" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0DB@@@YA?A_PAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0DB@@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; const &amp;,bool,bool,unsigned int,unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="FileExists(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::overflow(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolver_getaddrinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_sendf" Options="0" CompilationType="2" />
            <Procedure MapAddress="__report_gsfailure" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::pbackfail(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::append(char const * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_initialize_narrow_environment" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Xlength_error(char const *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="sscanf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hostcache_clean" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_verify_windows_version" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::end_array(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_get_line" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::key(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_open" Options="0" CompilationType="2" />
            <Procedure MapAddress="Sha256Update" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::scan(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::handle_value&lt;enum nlohmann::detail::value_t&gt;(enum nlohmann::detail::value_t &amp;&amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::handle_value&lt;bool &amp;&gt;(bool &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_thread_create" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_is_managed_app" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolv_unlock" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_uc_to_curlcode" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::current_path(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_cast::bad_cast(class std::bad_cast const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_write_plain" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_checkheaders" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_win32_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tidy_guard&lt;class std::vector&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Tidy_guard&lt;class std::vector&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSimpleStringT&lt;char,0&gt;::Reallocate(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_getlist" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_filedata" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cache_addr" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_is_gssapi_supported" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Xlen_string(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_get_dyn_tls_init_callback" Options="0" CompilationType="2" />
            <Procedure MapAddress="type_info::`scalar deleting destructor&apos;(unsigned int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::out_of_range::~out_of_range(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_MD5_final" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_rtsp_parseheader" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_easy_escape" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_gssapi_user_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_create_sspi_identity" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_multi_setopt" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::dtoa_impl::format_buffer(char *,int,int,int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_addsessionid" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ftp_parselist_data_alloc" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sspi_global_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsTime" Options="0" CompilationType="2" />
            <Procedure MapAddress="_RTC_Terminate" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_dedotdotify" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::uflow(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_add_buffer_send" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_recv_plain" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::xsgetn(char *,__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::operator[](class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_system_error_deallocate_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::~lexer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::scan_number(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ftp_parselist" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_add_buffer" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_cast::bad_cast(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::_Lock(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::make_error_code(enum std::errc)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_start_iterate" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_cleanup_spnego" Options="0" CompilationType="2" />
            <Procedure MapAddress="__current_exception" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::handle_value&lt;enum nlohmann::detail::value_t&gt;(enum nlohmann::detail::value_t &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_slist_append_nodup" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?0V?$istream_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@DU?$char_traits@D@2@_J@std@@$0A@@?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@QEAA@V?$istream_iterator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@DU?$char_traits@D@2@_J@1@0AEBV?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@1@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_add_buffer_free" Options="0" CompilationType="2" />
            <Procedure MapAddress="Sha256Finalise" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer_base&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::token_type_name(enum nlohmann::detail::lexer_base&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::token_type)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::start_object(unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?0AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V01@$0A@@?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@QEAA@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::setbuf(char *,__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_resolv" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(unsigned __int64,char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_readresp" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::runtime_error::runtime_error(class std::runtime_error const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_done" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::bad_array_new_length::bad_array_new_length(class std::bad_array_new_length const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;unsigned int,class std::allocator&lt;unsigned int&gt; &gt;::_Resize_reallocate&lt;unsigned int&gt;(unsigned __int64,unsigned int const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isdigit" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_escaped(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;bool,class std::allocator&lt;bool&gt; &gt;::pop_back(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::operator==(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CSimpleStringT&lt;char,0&gt;::Fork(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_client_write" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$_Emplace_reallocate@$$T@?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@@std@@@std@@AEAAPEAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@json_abi_v3_11_2@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@X@json_abi_v3_11_2@nlohmann@@QEAV234@$$QEA$$T@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Syserror_map(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::lexer_base&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::token_type_name(enum nlohmann::json_abi_v3_11_2::detail::lexer_base&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::token_type)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_exception_destroy" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_done_sending" Options="0" CompilationType="2" />
            <Procedure MapAddress="calloc" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_socket_check" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tidy_guard&lt;class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::~_Tidy_guard&lt;class std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::istream_iterator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,char,struct std::char_traits&lt;char&gt;,__int64&gt;::_Getval(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conn_data_pending" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::end_object(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Xbad_alloc(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::exception::exception(class std::exception const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::~basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_c_exit" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_cleanpart" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;struct channel_struct,class std::allocator&lt;struct channel_struct&gt; &gt;::_Tidy(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_state_timeout" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_rename" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_getinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Lrotate(struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::xsgetn(char *,__int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_updateconninfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ipv6works" Options="0" CompilationType="2" />
            <Procedure MapAddress="_set_fmode" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class KeyAuth::api::subscriptions_class,class std::allocator&lt;class KeyAuth::api::subscriptions_class&gt; &gt;::_Emplace_reallocate&lt;class KeyAuth::api::subscriptions_class &amp;&gt;(class KeyAuth::api::subscriptions_class * const,class KeyAuth::api::subscriptions_class &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ftp_parselist_geterror" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::_Lock(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_llist_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Ref_count_obj2&lt;class nlohmann::detail::output_string_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;::_Destroy(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::dtoa_impl::compute_boundaries&lt;double&gt;(double)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::system_error::~system_error(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Tidy(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_tls13_ciphersuites" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;::_Emplace_reallocate&lt;unsigned __int64 &amp;&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,unsigned __int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_Basic_XorStr&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,5&gt;::c_str(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_llist_remove" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_verify_certificate" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_flushsend" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::dtoa_impl::compute_boundaries&lt;double&gt;(double)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::operator&lt;&lt;(class std::basic_ostream&lt;char,struct std::char_traits&lt;char&gt; &gt; &amp;,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::error_category::default_error_condition(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_terminate" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsSetUploadCounter" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsResetTransferSizes" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Ref_count_obj2&lt;class nlohmann::json_abi_v3_11_2::detail::output_stream_adapter&lt;char&gt; &gt;::_Delete_this(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_is_digest_supported" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *&gt; &gt;::~vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; *&gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAtlStringMgr::Reallocate(struct ATL::CStringData *,int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::error_category::equivalent(class std::error_code const &amp;,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_ntlm_type1_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::back(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::this_thread::sleep_for&lt;__int64,struct std::ratio&lt;1,1&gt; &gt;(class std::chrono::duration&lt;__int64,struct std::ratio&lt;1,1&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_uztosz" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_conncontrol" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_str_key_compare" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_multi_add_handle" Options="0" CompilationType="2" />
            <Procedure MapAddress="sprintf" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_auth_cleanup_ntlm" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::number_float(double,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_istringstream&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::`vbase destructor&apos;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::~parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_httpchunk_read" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_getaddrinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="__security_init_cookie" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::output_stream_adapter&lt;char&gt;::write_character(char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="SuspendNtdllThreads(unsigned long)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_doh" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::filesystem_error::filesystem_error(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;,class std::filesystem::path const &amp;,class std::error_code)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::sync(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0M@@@YA?A_PAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0M@@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::boolean(bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_getenv" Options="0" CompilationType="2" />
            <Procedure MapAddress="__GSHandlerCheck_SEH" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_raw_toupper" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_none_md5sum" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ntlm_core_mk_nt_hash" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parse_error::create(int,struct nlohmann::detail::position_t const &amp;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::req(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_load_library" Options="0" CompilationType="2" />
            <Procedure MapAddress="__CxxFrameHandler4" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;enum nlohmann::json_abi_v3_11_2::detail::value_t&gt;(enum nlohmann::json_abi_v3_11_2::detail::value_t &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_contenttype" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt; &gt;::_Rrotate(struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;,void *&gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;double &amp;&gt;(double &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_timeleft" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Destroy_range&lt;class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * const,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::seekpos(class std::fpos&lt;struct _Mbstatet&gt;,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curlx_write" Options="0" CompilationType="2" />
            <Procedure MapAddress="ReadFromJson(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_http_readwrite_headers" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pop3_write" Options="0" CompilationType="2" />
            <Procedure MapAddress="getPath(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::dtoa_impl::grisu2_digit_gen(char *,int &amp;,int &amp;,struct nlohmann::json_abi_v3_11_2::detail::dtoa_impl::diyfp,struct nlohmann::json_abi_v3_11_2::detail::dtoa_impl::diyfp,struct nlohmann::json_abi_v3_11_2::detail::dtoa_impl::diyfp)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::lexer&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::scan_literal(char const *,unsigned __int64,enum nlohmann::detail::lexer_base&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::token_type)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Ref_count_obj2&lt;class nlohmann::detail::output_string_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;::_Delete_this(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::deallocate(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_isupper" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Change_array(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,unsigned __int64,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ip2addr" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_streambuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::uflow(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::filesystem::filesystem_error::~filesystem_error(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_freeaddrinfo" Options="0" CompilationType="2" />
            <Procedure MapAddress="CheckIfJsonKeyExists(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="write_callback(void *,unsigned __int64,unsigned __int64,void *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::hex(class std::ios_base &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_connect" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$_Emplace_reallocate@$$T@?$vector@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@nlohmann@@V?$allocator@V?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@nlohmann@@@std@@@std@@AEAAPEAV?$basic_json@Vmap@std@@Vvector@2@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@_N_J_KNVallocator@2@Uadl_serializer@nlohmann@@V?$vector@EV?$allocator@E@std@@@2@@nlohmann@@QEAV23@$$QEA$$T@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_size" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hostcache_prune" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Reallocate&lt;0&gt;(unsigned __int64 &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="_get_startup_argv_mode" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::load_user_data(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::output_string_adapter&lt;char,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt;::write_characters(char const *,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="__local_stdio_scanf_options" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_cram_md5_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pp_getsock" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;,class std::allocator&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;bool &amp;&gt;(class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; * const,bool &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::operator=(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_false_start" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::use_facet&lt;class std::codecvt&lt;char,char,struct _Mbstatet&gt; &gt;(class std::locale const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::resize(unsigned __int64,char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::parse_error::parse_error(class nlohmann::json_abi_v3_11_2::detail::parse_error const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::allocator&lt;class KeyAuth::api::subscriptions_class&gt;::deallocate(class KeyAuth::api::subscriptions_class * const,unsigned __int64)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_data_pending" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *,class std::allocator&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *&gt; &gt;::_Emplace_reallocate&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; *&gt;(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * * const,class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; * &amp;&amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::vector&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,class std::allocator&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::subscriptions_class::~subscriptions_class(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::detail::serializer&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_integer&lt;unsigned char,0&gt;(unsigned char)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_socket" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::handle_value&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;&gt;(class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_free_primary_ssl_config" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Generic_error_category::message(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_infof" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_callback_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::handle_value&lt;__int64 &amp;&gt;(__int64 &amp;,bool)" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?HV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$05@@YA?A_PAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBV?$_Basic_XorStr@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$05@@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sendf" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_initialize_crt" Options="0" CompilationType="2" />
            <Procedure MapAddress="KeyAuth::api::load_response_data(class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_mime_subparts" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_thread_join" Options="0" CompilationType="2" />
            <Procedure MapAddress="__std_fs_convert_wide_to_narrow_replace_chars" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::CAccessToken::~CAccessToken(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_inet_ntop" Options="0" CompilationType="2" />
            <Procedure MapAddress="??$?0V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@$0A@@path@filesystem@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@W4format@012@@Z" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Copy_vbool&lt;class std::_Vb_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt;,class std::_Vb_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt; &gt;(class std::_Vb_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt;,class std::_Vb_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt;,class std::_Vb_iterator&lt;struct std::_Wrap_alloc&lt;class std::allocator&lt;unsigned int&gt; &gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_range" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;::~json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt;(void)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_pgrsStartNow" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_hash_clean" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::out_of_range::create(int,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_stringbuf&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;::seekoff(__int64,int,int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_unencode_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_mime_initpart" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ntlm_core_lm_resp" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_sasl_can_authenticate" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::_Tree_val&lt;struct std::_Tree_simple_types&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::_Insert_node(struct std::_Tree_id&lt;struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; *&gt;,struct std::_Tree_node&lt;struct std::pair&lt;class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt; const,class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,void *&gt; * const)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_is_spnego_supported" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_wildcard_init" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_ssl_config_matches" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_cookie_clearall" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::basic_filebuf&lt;char,struct std::char_traits&lt;char&gt; &gt;::pbackfail(int)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt;::erase&lt;class nlohmann::json_abi_v3_11_2::detail::iter_impl&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,0&gt;(class nlohmann::json_abi_v3_11_2::detail::iter_impl&lt;class nlohmann::json_abi_v3_11_2::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::json_abi_v3_11_2::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="nlohmann::detail::parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt;,class nlohmann::detail::iterator_input_adapter&lt;class std::_String_const_iterator&lt;class std::_String_val&lt;struct std::_Simple_types&lt;char&gt; &gt; &gt; &gt; &gt;::sax_parse_internal&lt;class nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; &gt;(class nlohmann::detail::json_sax_dom_parser&lt;class nlohmann::basic_json&lt;class std::map,class std::vector,class std::basic_string&lt;char,struct std::char_traits&lt;char&gt;,class std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,class std::allocator,struct nlohmann::adl_serializer,class std::vector&lt;unsigned char,class std::allocator&lt;unsigned char&gt; &gt; &gt; &gt; *)" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::error_category::equivalent(int,class std::error_condition const &amp;)" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_create_gssapi_security_message" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_idnconvert_hostname" Options="0" CompilationType="2" />
            <Procedure MapAddress="curl_url_dup" Options="0" CompilationType="2" />
            <Procedure MapAddress="Curl_auth_digest_cleanup" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_initialize_mta" Options="0" CompilationType="2" />
            <Procedure MapAddress="ConvertSidToStringSidA" Options="0" CompilationType="2" />
            <Procedure MapAddress="std::`dynamic atexit destructor for &apos;_Fac_tidy_reg&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_is_nonwritable_in_current_image$filt$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="__scrt_common_main_seh" Options="0" CompilationType="2" />
            <Procedure MapAddress="`__scrt_common_main_seh&apos;::`1&apos;::filt$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="post_pgo_initialization" Options="0" CompilationType="2" />
            <Procedure MapAddress="pre_c_initialization" Options="0" CompilationType="2" />
            <Procedure MapAddress="pre_cpp_initialization" Options="0" CompilationType="2" />
            <Procedure MapAddress="capture_current_context" Options="0" CompilationType="2" />
            <Procedure MapAddress="capture_previous_context" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::`dynamic initializer for &apos;_AtlBaseModule&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="ATL::`dynamic atexit destructor for &apos;_AtlBaseModule&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &amp;,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,0&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::operator&gt;&gt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::operator&gt;&gt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::operator&gt;&gt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::operator&gt;&gt;&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;&apos;::`1&apos;::catch$13" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt; &gt;&apos;::`1&apos;::dtor$11" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt; &gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt; &gt;&apos;::`1&apos;::catch$21" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,0&gt; &gt;::_Copy_nodes&lt;0&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,0&gt; &gt;::_Copy_nodes&lt;0&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,0&gt; &gt;::_Copy_nodes&lt;0&gt;&apos;::`1&apos;::catch$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::_Tree&lt;std::_Tmap_traits&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,0&gt; &gt;::_Emplace&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,std::nullptr_t&gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;::_Emplace_reallocate&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &amp;&gt;&apos;::`1&apos;::catch$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::_Try_emplace&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const &amp;&gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt;::_Try_emplace&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const &amp;&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::concat&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,char const (&amp;)[25],char const *&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::other_error::create&lt;std::nullptr_t,0&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::other_error::create&lt;std::nullptr_t,0&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::other_error::create&lt;std::nullptr_t,0&gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parse_error::create&lt;std::nullptr_t,0&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parse_error::create&lt;std::nullptr_t,0&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parse_error::create&lt;std::nullptr_t,0&gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parse_error::create&lt;std::nullptr_t,0&gt;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;std::map&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::less&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &gt;,std::allocator&lt;std::pair&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; const ,nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; &gt; &gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; const &amp;&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; const &amp;&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::create&lt;std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;,std::vector&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,std::allocator&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt; const &amp;&gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure Address="5368797092" Options="0" CompilationType="2" />
            <Procedure Address="5368797052" Options="0" CompilationType="2" />
            <Procedure Address="5368782760" Options="0" CompilationType="2" />
            <Procedure Address="5368787032" Options="0" CompilationType="2" />
            <Procedure Address="5368791284" Options="0" CompilationType="2" />
            <Procedure Address="5368752620" Options="0" CompilationType="2" />
            <Procedure Address="5368750436" Options="0" CompilationType="2" />
            <Procedure Address="5368754412" Options="0" CompilationType="2" />
            <Procedure Address="5368754380" Options="0" CompilationType="2" />
            <Procedure Address="5368789068" Options="0" CompilationType="2" />
            <Procedure Address="5368789028" Options="0" CompilationType="2" />
            <Procedure Address="5368788988" Options="0" CompilationType="2" />
            <Procedure Address="5368788948" Options="0" CompilationType="2" />
            <Procedure Address="5368788908" Options="0" CompilationType="2" />
            <Procedure Address="5368788868" Options="0" CompilationType="2" />
            <Procedure Address="5368788828" Options="0" CompilationType="2" />
            <Procedure Address="5368769612" Options="0" CompilationType="2" />
            <Procedure Address="5368769560" Options="0" CompilationType="2" />
            <Procedure Address="5368772052" Options="0" CompilationType="2" />
            <Procedure Address="5368772012" Options="0" CompilationType="2" />
            <Procedure Address="5368771952" Options="0" CompilationType="2" />
            <Procedure Address="5368771896" Options="0" CompilationType="2" />
            <Procedure Address="5368771884" Options="0" CompilationType="2" />
            <Procedure Address="5368771844" Options="0" CompilationType="2" />
            <Procedure Address="5368771788" Options="0" CompilationType="2" />
            <Procedure Address="5368771772" Options="0" CompilationType="2" />
            <Procedure Address="5368771732" Options="0" CompilationType="2" />
            <Procedure Address="5368771680" Options="0" CompilationType="2" />
            <Procedure Address="5368774620" Options="0" CompilationType="2" />
            <Procedure Address="5368774580" Options="0" CompilationType="2" />
            <Procedure Address="5368774332" Options="0" CompilationType="2" />
            <Procedure Address="5368774156" Options="0" CompilationType="2" />
            <Procedure Address="5368769904" Options="0" CompilationType="2" />
            <Procedure Address="5368752252" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::erase&lt;nlohmann::json_abi_v3_11_2::detail::iter_impl&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,0&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::erase&lt;nlohmann::json_abi_v3_11_2::detail::iter_impl&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,0&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::erase&lt;nlohmann::json_abi_v3_11_2::detail::iter_impl&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;,0&gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;std::nullptr_t&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &amp;&gt;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt; &amp;&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::handle_value&lt;enum nlohmann::json_abi_v3_11_2::detail::value_t&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parse&lt;std::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt; &amp;&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parse&lt;std::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt; &amp;&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parse&lt;std::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt; &amp;&gt;&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parse&lt;std::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt; &amp;&gt;&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parser&lt;nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parser&lt;nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parser&lt;nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parser&lt;nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;&apos;::`1&apos;::dtor$8" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parser&lt;nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::parser&lt;nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;&apos;::`1&apos;::dtor$7" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$7" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$8" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$9" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$10" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$11" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$12" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$13" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$14" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$15" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$16" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$17" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$18" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$19" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$20" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$21" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$22" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$23" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$24" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$25" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$26" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$27" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$28" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$29" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$30" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$31" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$32" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$33" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$34" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$35" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$36" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$7" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$8" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$9" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$10" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$11" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$12" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$13" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$14" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$15" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$16" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$17" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$18" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$19" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$20" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$21" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$22" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$23" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$24" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$25" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$26" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$27" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$28" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$29" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$30" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$31" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$32" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$33" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$34" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$35" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::sax_parse_internal&lt;nlohmann::json_abi_v3_11_2::detail::json_sax_dom_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt; &gt;&apos;::`1&apos;::dtor$36" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::use_facet&lt;std::codecvt&lt;char,char,_Mbstatet&gt; &gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::use_facet&lt;std::codecvt&lt;char,char,_Mbstatet&gt; &gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt;::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt;::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt;::basic_ifstream&lt;char,std::char_traits&lt;char&gt; &gt;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;&apos;::`1&apos;::dtor$10" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$7" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$8" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$9" Options="0" CompilationType="2" />
            <Procedure MapAddress="`KeyAuth::api::api&apos;::`1&apos;::dtor$10" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::operator&lt;&lt;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::operator&lt;&lt;&apos;::`1&apos;::dtor$12" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::operator&lt;&lt;&apos;::`1&apos;::dtor$13" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::operator&lt;&lt;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::operator[]&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::operator[]&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`main&apos;::`23&apos;::&lt;lambda_16&gt;::operator()" Options="0" CompilationType="2" />
            <Procedure MapAddress="`main&apos;::`26&apos;::&lt;lambda_17&gt;::operator()" Options="0" CompilationType="2" />
            <Procedure MapAddress="`SuspendNtdllThreads&apos;::`2&apos;::&lt;lambda_1&gt;::operator()" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;KeyAuthApp&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="``dynamic initializer for &apos;KeyAuthApp&apos;&apos;&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="``dynamic initializer for &apos;KeyAuthApp&apos;&apos;&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="``dynamic initializer for &apos;KeyAuthApp&apos;&apos;&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="``dynamic initializer for &apos;KeyAuthApp&apos;&apos;&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="``dynamic initializer for &apos;KeyAuthApp&apos;&apos;&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;compilation_date&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;compilation_time&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;name&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;ownerid&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;path&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;secret&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;url&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic initializer for &apos;version&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;KeyAuthApp&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;compilation_date&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;compilation_time&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;name&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;ownerid&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;path&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;secret&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;url&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`dynamic atexit destructor for &apos;version&apos;&apos;" Options="0" CompilationType="2" />
            <Procedure MapAddress="`CheckIfJsonKeyExists&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`CheckIfJsonKeyExists&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`CheckIfJsonKeyExists&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`GenerateRandomString&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`GenerateRandomString&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`ReadFromJson&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`ReadFromJson&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`ReadFromJson&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`ReadFromJson&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`ReadFromJson&apos;::`1&apos;::dtor$12" Options="0" CompilationType="2" />
            <Procedure MapAddress="`ReadFromJson&apos;::`1&apos;::dtor$16" Options="0" CompilationType="2" />
            <Procedure MapAddress="`UpdateTitle&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`UpdateTitle&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$21" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$8" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$24" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$10" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$15" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$16" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$17" Options="0" CompilationType="2" />
            <Procedure MapAddress="`WriteToJson&apos;::`1&apos;::dtor$12" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::json_value::destroy&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;::json_value::destroy&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_escaped&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_escaped&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_escaped&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_escaped&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::serializer&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::dump_escaped&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::end_object&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::exception_message&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::exception_message&apos;::`1&apos;::dtor$6" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::exception_message&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::exception_message&apos;::`1&apos;::dtor$11" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::exception_message&apos;::`1&apos;::dtor$17" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::exception_message&apos;::`1&apos;::dtor$22" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::key&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::key&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::json_sax_dom_callback_parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt; &gt;::key&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::exception::name&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::exception::name&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::basic_filebuf&lt;char,std::char_traits&lt;char&gt; &gt;::open&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$14" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$4" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$8" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$9" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$10" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$11" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parser&lt;nlohmann::json_abi_v3_11_2::basic_json&lt;std::map,std::vector,std::basic_string&lt;char,std::char_traits&lt;char&gt;,std::allocator&lt;char&gt; &gt;,bool,__int64,unsigned __int64,double,std::allocator,nlohmann::json_abi_v3_11_2::adl_serializer,std::vector&lt;unsigned char,std::allocator&lt;unsigned char&gt; &gt;,void&gt;,nlohmann::json_abi_v3_11_2::detail::input_stream_adapter&gt;::parse&apos;::`1&apos;::dtor$12" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parse_error::position_string&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parse_error::position_string&apos;::`1&apos;::dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="`nlohmann::json_abi_v3_11_2::detail::parse_error::position_string&apos;::`1&apos;::dtor$7" Options="0" CompilationType="2" />
            <Procedure MapAddress="`std::basic_filebuf&lt;char,std::char_traits&lt;char&gt; &gt;::uflow&apos;::`1&apos;::dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$47" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$0" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$51" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$1" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$2" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$3" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$5" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$7" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$9" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$11" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$12" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$14" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$15" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$17" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$18" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$19" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$20" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$22" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$23" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$24" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$26" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$29" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$30" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$31" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$32" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$34" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$35" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$36" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$37" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$70" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$39" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$74" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$40" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$43" Options="0" CompilationType="2" />
            <Procedure MapAddress="main$dtor$41" Options="0" CompilationType="2" />
        </Procedures>
        <Objects />
    </Protection>
    <DLLBox>
        <Folders />
    </DLLBox>
    <Script />
    <LicenseManager />
</Document>
